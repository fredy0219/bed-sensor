[{"/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/index.js":"1","/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/App.js":"2","/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/reportWebVitals.js":"3","/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/component/NavBar.jsx":"4","/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/component/BedOverview.jsx":"5","/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/component/LeftBar.jsx":"6","/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/component/BedDetail.jsx":"7","/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/component/BedCard.jsx":"8","/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/component/SensorPanel.jsx":"9"},{"size":962,"mtime":1665971301237,"results":"10","hashOfConfig":"11"},{"size":1367,"mtime":1665971301237,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1665971301237,"results":"13","hashOfConfig":"11"},{"size":474,"mtime":1665971301237,"results":"14","hashOfConfig":"11"},{"size":1375,"mtime":1666002150679,"results":"15","hashOfConfig":"11"},{"size":1860,"mtime":1665995299398,"results":"16","hashOfConfig":"11"},{"size":6389,"mtime":1667986539859,"results":"17","hashOfConfig":"11"},{"size":3545,"mtime":1665994049782,"results":"18","hashOfConfig":"11"},{"size":1038,"mtime":1665991310262,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"12hni31",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"23"},"/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/index.js",[],[],[],"/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/App.js",[],[],"/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/reportWebVitals.js",[],[],"/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/component/NavBar.jsx",[],[],"/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/component/BedOverview.jsx",["51"],[],"import React, { useState, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport BedCard from './BedCard';\nimport websocket from 'socket.io-client'\n\nconst BedOverview = () => {\n    const [ws, setWs] = useState(null)\n    useEffect(() => {\n        if (!ws) {\n            console.log('no connection')\n            setWs(websocket('http://localhost:5000'))\n        }\n\n        if (ws) {\n            initWebSocket()\n        }\n\n        setInterval(() => {\n            if (ws !== null) {\n                ws.emit('askBedOverview', 'Hello World')\n                ws.emit('askAlarmDataFromClient', 'Hello World')\n            }\n        }, 1000);\n    }, [ws])\n\n    // websocket handler\n    const initWebSocket = () => {\n        ws.on('getBedOverview', message => {\n            setBedInfo(message)\n        })\n    }\n\n    const [bedInfo, setBedInfo] = useState([\n        { number: 168, state: 'No signal' },\n        { number: 169, state: 'On bed' },\n        { number: 170, state: 'On bed' },\n        { number: 171, state: 'Reposition' },\n        { number: 172, state: 'Off' }\n    ]);\n\n    return (\n        <Grid container spacing={3}>\n            {Array.from(bedInfo).map((info, index) => (\n                <Grid item xs={3} key={index}>\n                    <BedCard info={info} />\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default BedOverview;","/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/component/LeftBar.jsx",[],[],"/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/component/BedDetail.jsx",["52","53","54","55"],[],"/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/component/BedCard.jsx",["56","57","58","59","60","61","62","63"],[],"import React from 'react';\nimport { Card, CardActionArea, CardContent, Typography, Link } from '@mui/material';\nimport { WifiOffTwoTone, WarningTwoTone, HotelTwoTone, NotificationsActiveTwoTone, AirlineSeatReclineNormalTwoTone, DirectionsRunTwoTone, CancelPresentationTwoTone } from '@mui/icons-material';\nimport { Paper } from '@mui/material';\nimport { green, grey, yellow, red} from '@mui/material/colors';\nimport { styled } from '@mui/system';\n\n\nexport const checkColor = (state) => {\n    var color = '#FFF'\n    switch (state) {\n        case 'Off':\n            color = grey[500]; break;\n        case 'No connection':\n            color = red[200]; break;\n        case 'No signal':\n            color = red[200]; break;\n        case 'Reposition':\n            color = green[200]; break;\n        default:\n            color = grey[200];\n    }\n    return color\n}\n\nconst StyledCard = styled(Card)(({state}) =>({\n    backgroundColor: checkColor(state)\n}));\n\nconst StyledCardDiv = styled('div')(({theme})=>({\n    display: 'flex',\n    justifyContent: 'center',\n    marginBottom: theme.spacing(1),\n}));\n\nconst StyledPaper = styled(Paper)(({theme}) => ({\n    display: 'flex',\n    justifyContent: 'center',\n    marginBottom: theme.spacing(1),\n    backgroundColor: yellow[300],\n}));\n\nconst styledIcon = {\n    fontSize: \"150px\",\n};\n\nconst StyledCardTime = styled('div')(({state})=>({\n    visibility: state == 'Reposition' ? 'visible' : 'hidden'\n}));\n\nexport const BedIcon = (props) => {\n    // const classes = useStyles(props);\n    let icon = HotelTwoTone\n    if (props.state == 'Off') icon = CancelPresentationTwoTone\n    if (props.state == 'No connection') icon = WifiOffTwoTone\n    if (props.state == 'No signal') icon = WarningTwoTone\n    if (props.state == 'On bed') icon = HotelTwoTone\n    if (props.state == 'Reposition') icon = NotificationsActiveTwoTone\n    // if(props.state == 'Sit on bed') icon = SelfImprovementTwoTone\n    if (props.state == 'Sit beside bed') icon = AirlineSeatReclineNormalTwoTone\n    if (props.state == 'Escape') icon = DirectionsRunTwoTone\n    return React.createElement(icon, { ...props });\n}\n\nconst BedCard = (props) => {\n    return (\n        <div>\n            {/* <Paper className={classes.cardDiv} style={{backgroundColor: yellow[300]}}> */}\n            <StyledPaper>\n                <Typography variant='h5'>\n                    {props.info.number}\n                </Typography>\n            </StyledPaper>\n\n            <StyledCard state={props.info.state}>\n                <Link href={\"/bedDetail/\" + props.info.number} style={{textDecoration: 'inherit', }} color=\"inherit\">\n                    <CardActionArea>\n                        <CardContent>\n                            <StyledCardDiv>\n                                <BedIcon sx={styledIcon} state={props.info.state} />\n                            </StyledCardDiv>\n                            <StyledCardDiv>\n                                <Typography variant='h6'>\n                                    {props.info.state}\n                                </Typography>\n                            </StyledCardDiv>\n                            <StyledCardDiv>\n                                <StyledCardTime variant='h6' state={props.info.state}>\n                                    00:00:00\n                                </StyledCardTime>\n                            </StyledCardDiv>\n                        </CardContent>\n                    </CardActionArea>\n                </Link>\n            </StyledCard>\n        </div>\n    );\n};\n\nexport default BedCard;\n","/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-frontend/src/component/SensorPanel.jsx",["64","65"],[],"import React, { useState } from 'react'\nimport { Paper, Grid, Card } from '@mui/material';\n// import { makeStyles } from '@mui/styles';\n// import { useTheme } from '@mui/styles';\nimport { styled } from '@mui/system';\n\nconst StyledPaper = styled(Paper)(({theme}) => ({\n    padding: theme.spacing(0.1),\n    textAlign: 'center',\n    elevation: 3,\n    height: 15,\n    border: \"5px solid\",\n    borderColor: 'rgb(180,0,0,0)'\n}));\n\nconst Dot = (props) => {\n    return (\n        <StyledPaper\n            id={props.panel_index + ',' + props.x_index + ',' + props.y_index} />\n    )\n}\n\nconst SensorPanel = (props) => {\n    return (\n        <Grid container spacing={1} columns={16}>\n            {Array.from(Array(10)).map((_, y) => {\n                return Array.from(Array(8)).map((_, x) => (\n                    <Grid item xs={2}>\n                        <Dot panel_index={props.panel_index} x_index={x + 1} y_index={y + 1}></Dot>\n                    </Grid>\n                ))\n            })}\n        </Grid>\n    );\n};\n\nexport default SensorPanel;",{"ruleId":"66","severity":1,"message":"67","line":24,"column":8,"nodeType":"68","endLine":24,"endColumn":12,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":40,"column":23,"nodeType":"72","messageId":"73","endLine":40,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":44,"column":21,"nodeType":"76","messageId":"77","endLine":44,"endColumn":31},{"ruleId":"66","severity":1,"message":"78","line":69,"column":8,"nodeType":"68","endLine":69,"endColumn":12,"suggestions":"79"},{"ruleId":"70","severity":1,"message":"71","line":117,"column":25,"nodeType":"72","messageId":"73","endLine":117,"endColumn":27},{"ruleId":"70","severity":1,"message":"71","line":48,"column":23,"nodeType":"72","messageId":"73","endLine":48,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":54,"column":21,"nodeType":"72","messageId":"73","endLine":54,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":55,"column":21,"nodeType":"72","messageId":"73","endLine":55,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":56,"column":21,"nodeType":"72","messageId":"73","endLine":56,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":57,"column":21,"nodeType":"72","messageId":"73","endLine":57,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":58,"column":21,"nodeType":"72","messageId":"73","endLine":58,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":60,"column":21,"nodeType":"72","messageId":"73","endLine":60,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":61,"column":21,"nodeType":"72","messageId":"73","endLine":61,"endColumn":23},{"ruleId":"74","severity":1,"message":"80","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"81","line":2,"column":23,"nodeType":"76","messageId":"77","endLine":2,"endColumn":27},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initWebSocket'. Either include it or remove the dependency array.","ArrayExpression",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'setBedInfo' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'initWebSocket' and 'params.bedId'. Either include them or remove the dependency array.",["83"],"'useState' is defined but never used.","'Card' is defined but never used.",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [initWebSocket, ws]",{"range":"88","text":"89"},"Update the dependencies array to be: [initWebSocket, params.bedId, ws]",{"range":"90","text":"91"},[656,660],"[initWebSocket, ws]",[1904,1908],"[initWebSocket, params.bedId, ws]"]