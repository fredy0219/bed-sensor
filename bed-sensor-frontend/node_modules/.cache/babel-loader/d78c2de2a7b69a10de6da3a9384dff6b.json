{"ast":null,"code":"var _jsxFileName = \"/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-ui-design/src/component/BedOverview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport BedCard from './BedCard';\nimport websocket from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BedOverview = () => {\n  _s();\n  const [ws, setWs] = useState(null);\n  useEffect(() => {\n    if (!ws) {\n      console.log('no connection');\n      setWs(websocket('http://localhost:5000'));\n    }\n    if (ws) {\n      initWebSocket();\n    }\n    setInterval(() => {\n      if (ws !== null) {\n        ws.emit('askSensorDataFromClient', 'Hello World');\n        ws.emit('askAlarmDataFromClient', 'Hello World');\n      }\n    }, 50);\n  }, [ws]);\n\n  // websocket handler\n  const initWebSocket = () => {\n    ws.on('getBedOverview', message => {\n      // console.log(message)\n    });\n  };\n  const [bedInfo, setBedInfo] = useState([{\n    number: 168,\n    state: 'No signal'\n  }, {\n    number: 169,\n    state: 'On bed'\n  }, {\n    number: 170,\n    state: 'On bed'\n  }, {\n    number: 171,\n    state: 'Reposition'\n  }, {\n    number: 172,\n    state: 'Off'\n  }]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: Array.from(bedInfo).map((info, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(BedCard, {\n        info: info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(BedOverview, \"8wQo+U0GFlx+nast3OX6Sx6hvcQ=\");\n_c = BedOverview;\nexport default BedOverview;\nvar _c;\n$RefreshReg$(_c, \"BedOverview\");","map":{"version":3,"names":["React","useState","useEffect","Grid","BedCard","websocket","BedOverview","ws","setWs","console","log","initWebSocket","setInterval","emit","on","message","bedInfo","setBedInfo","number","state","Array","from","map","info","index"],"sources":["/home/ff/Desktop/BedSensor/bed-sensor/bed-sensor-ui-design/src/component/BedOverview.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport BedCard from './BedCard';\nimport websocket from 'socket.io-client'\n\nconst BedOverview = () => {\n    const [ws, setWs] = useState(null)\n    useEffect(() => {\n        if (!ws) {\n            console.log('no connection')\n            setWs(websocket('http://localhost:5000'))\n        }\n\n        if (ws) {\n            initWebSocket()\n        }\n\n        setInterval(() => {\n            if (ws !== null) {\n                ws.emit('askSensorDataFromClient', 'Hello World')\n                ws.emit('askAlarmDataFromClient', 'Hello World')\n            }\n        }, 50);\n    }, [ws])\n\n    // websocket handler\n    const initWebSocket = () => {\n        ws.on('getBedOverview', message => {\n            // console.log(message)\n        })\n    }\n\n    const [bedInfo, setBedInfo] = useState([\n        { number: 168, state: 'No signal' },\n        { number: 169, state: 'On bed' },\n        { number: 170, state: 'On bed' },\n        { number: 171, state: 'Reposition' },\n        { number: 172, state: 'Off' }\n    ]);\n\n    return (\n        <Grid container spacing={3}>\n            {Array.from(bedInfo).map((info, index) => (\n                <Grid item xs={3} key={index}>\n                    <BedCard info={info} />\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default BedOverview;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,eAAe;AACpC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,kBAAkB;AAAA;AAExC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAClCC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACK,EAAE,EAAE;MACLE,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5BF,KAAK,CAACH,SAAS,CAAC,uBAAuB,CAAC,CAAC;IAC7C;IAEA,IAAIE,EAAE,EAAE;MACJI,aAAa,EAAE;IACnB;IAEAC,WAAW,CAAC,MAAM;MACd,IAAIL,EAAE,KAAK,IAAI,EAAE;QACbA,EAAE,CAACM,IAAI,CAAC,yBAAyB,EAAE,aAAa,CAAC;QACjDN,EAAE,CAACM,IAAI,CAAC,wBAAwB,EAAE,aAAa,CAAC;MACpD;IACJ,CAAC,EAAE,EAAE,CAAC;EACV,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;;EAER;EACA,MAAMI,aAAa,GAAG,MAAM;IACxBJ,EAAE,CAACO,EAAE,CAAC,gBAAgB,EAAEC,OAAO,IAAI;MAC/B;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,CACnC;IAAEiB,MAAM,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAY,CAAC,EACnC;IAAED,MAAM,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAS,CAAC,EAChC;IAAED,MAAM,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAS,CAAC,EAChC;IAAED,MAAM,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAa,CAAC,EACpC;IAAED,MAAM,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAM,CAAC,CAChC,CAAC;EAEF,oBACI,QAAC,IAAI;IAAC,SAAS;IAAC,OAAO,EAAE,CAAE;IAAA,UACtBC,KAAK,CAACC,IAAI,CAACL,OAAO,CAAC,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjC,QAAC,IAAI;MAAC,IAAI;MAAC,EAAE,EAAE,CAAE;MAAA,uBACb,QAAC,OAAO;QAAC,IAAI,EAAED;MAAK;QAAA;QAAA;QAAA;MAAA;IAAG,GADJC,KAAK;MAAA;MAAA;MAAA;IAAA,QAG/B;EAAC;IAAA;IAAA;IAAA;EAAA,QACC;AAEf,CAAC;AAAC,GA5CIlB,WAAW;AAAA,KAAXA,WAAW;AA8CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}